FROM adoptopenjdk/openjdk11:jdk-11.0.11_9-alpine

WORKDIR /usr/src/app

ADD src ./src
COPY pom.xml .editorconfig pinata-analytics-pipeline.iml ./
COPY .env.template ./.env

RUN apk add --no-cache curl tar bash procps

# Downloading and installing Maven
ARG MAVEN_VERSION=3.8.7

# working directory
ARG USER_HOME_DIR="/root"

# maven url base
ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries

# Create the directories, download maven, install it, remove downloaded file and set links
RUN mkdir -p /usr/share/maven /usr/share/maven/ref \
  && echo "Downloading maven" \
  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
  \
  && echo "Unziping maven" \
  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
  \
  && echo "Cleaning and setting links" \
  && rm -f /tmp/apache-maven.tar.gz \
  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

# Define environmental variables required by Maven, like Maven_Home directory and where the maven repo is located
ENV MAVEN_HOME /usr/share/maven
ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"

# --no-transfer-progres added to bypass Gitlab Job's log exceeded limit
RUN mvn clean install --no-transfer-progress

CMD mvn exec:java -Dexec.mainClass=cloud.pinata.analytics.pipeline.AnalyticsPipeline -Pflink-runner -Dexec.args="--runner=FlinkRunner --flinkMaster=localhost:8081 --filesToStage=target/pinata-analytics-pipeline-bundled-0.1.jar"
